<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:hdfs="http://www.mulesoft.org/schema/mule/hdfs" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/hdfs http://www.mulesoft.org/schema/mule/hdfs/3.3/mule-hdfs.xsd 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd ">
    <hdfs:config name="hdfs-conf" connectionKey="myUser" doc:name="HDFS" defaultFileSystemName="hdfs://localhost:9000">
        <hdfs:connection-pooling-profile initialisationPolicy="INITIALISE_ONE" exhaustedAction="WHEN_EXHAUSTED_GROW"/>
    </hdfs:config>
    <flow name="Delete_File_Flow" doc:name="Delete_File_Flow">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8090" path="filedelete" doc:name="HTTP"/>
        <logger message="Deleting file: #[message.inboundProperties['path']]" level="INFO" doc:name="Delete file log"/>
        <hdfs:delete-file config-ref="hdfs-conf" path="#[message.inboundProperties['path']]" doc:name="Delete file"/>
    </flow>
    <flow name="Create_File_Flow" doc:name="Create_File_Flow">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8090" path="filecreate" doc:name="HTTP"/>
        <logger message="Creating file: #[message.inboundProperties['path']] with message: #[message.inboundProperties['msg']]" level="INFO" doc:name="Write to Path Log"/>
        <set-payload value="#[message.inboundProperties['msg']]" doc:name="Set the message input as payload"/>
        <hdfs:write config-ref="hdfs-conf" path="#[message.inboundProperties['path']]" permission="751" doc:name="Write to Path"/>
    </flow>
    <flow name="Append_File_Flow" doc:name="Append_File_Flow" doc:description="IMPORTANT
to being able to append info in HDFS, you must set the property dfs.support.append in conf/hdfs-site.xml to true.
Otherwise the service will throw an Exception">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8090" doc:name="HTTP" path="fileappend"/>
        <logger message="Appending file: #[message.inboundProperties['path']] with message: #[message.inboundProperties['msg']]" level="INFO" doc:name="Append to File Log"/>
        <set-payload value="#[message.inboundProperties['msg']]" doc:name="Set the message input as payload"/>
        <hdfs:append config-ref="hdfs-conf" path="#[message.inboundProperties['path']]" doc:name="Append to path"/>
    </flow>
    <flow name="Retrieve_File_Flow" doc:name="Retrieve_File_Flow">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8090" path="fileretrieve" doc:name="HTTP"/>
        <logger message="Retrieving file: #[message.inboundProperties['path']]" level="INFO" doc:name="Retrieve File Log"/>
        <hdfs:read config-ref="hdfs-conf" path="#[message.inboundProperties['path']]" doc:name="Read From Path"/>
    </flow>
    <flow name="Delete_Directory_Flow" doc:name="Delete_Directory_Flow">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8090" path="dirdelete" doc:name="HTTP"/>
        <logger message="Deleting dir: #[message.inboundProperties['path']]" level="INFO" doc:name="Delete Directory Log"/>
        <hdfs:delete-directory config-ref="hdfs-conf" path="#[message.inboundProperties['path']]" doc:name="Delete Directory"/>
    </flow>
    <flow name="Create_Directory_Flow" doc:name="Create_Directory_Flow">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8090" path="dircreate" doc:name="HTTP"/>
        <logger message="Creating Directory: #[message.inboundProperties['path']]" level="INFO" doc:name="Create Directory Log"/>
        <hdfs:make-directories config-ref="hdfs-conf" path="#[message.inboundProperties['path']]" permission="751" doc:name="Create Directory"/>
    </flow>
    <flow name="Meta_Data_Flow" doc:name="Meta_Data_Flow">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8090" path="metadata" doc:name="HTTP" contentType="text/plain" mimeType="text/plain"/>
        <logger message="Meta-Data from path: #[message.inboundProperties['path']]" level="INFO" doc:name="MetaData Log"/>
        <hdfs:get-metadata config-ref="hdfs-conf" path="#[message.inboundProperties['path']]" doc:name="Get Path Meta Data" doc:description="The &amp;quot;Get Path Meta Data&amp;quot; processor will obtain META-DATA from a path that can be either a file or a directory.
The way that this info is gathered is that once the process is executed, the result will be stored in flowVars.

These vars are:
hdfs.path.exists - Indicates if the path exists (true or false)
hdfs.content.summary - A resume of the path info
hdfs.file.checksum - MD5 digest of the file (if it is a file and exists)
hdfs.file.status - The status of the file"/>
        <set-payload value="#[['path': message.inboundProperties['path'],'pathExists':flowVars['hdfs.path.exists'],'contentSummary':flowVars['hdfs.content.summary'],'fileStatus':flowVars['hdfs.file.status'],'fileChecksum':flowVars['hdfs.file.checksum']]]" doc:name="Get the Meta-Data from the flowVars"/>
        <object-to-string-transformer mimeType="text/plain" doc:name="Convert payload to String"/>
    </flow>
</mule>
